<article class="post">
<h2 id="how-to-choose-the-best-shell-for-you">How to choose the best shell for you</h2>
<h3 id="introduction">Introduction</h3>
<p>Choose a good shell that fits your usage is one of the most common tasks when comes to the Linux world. Some help you do things better and faster, boosting your productivity. But certainly there is not a pre-made secret formula to choose the right shell for every user, so that is when this guide comes. </p>
<h3 id="bash">Bash</h3>
<p>The <strong>B</strong>ourne <strong>A</strong>gain <strong>Sh</strong>ell, most commonly known as Bash, is the default shell for most Linux distributions.  Bash supports brace expansion, command line completion and basic debugging. It also can execute the vast majority of Bourne shell scripts without modification, with the exception of Bourne shell scripts stumbling into fringe syntax behavior interpreted differently in Bash or attempting to run a system command matching a newer Bash builtin, etc. </p>
<p>When a user presses the tab key within an interactive command-shell, Bash automatically uses command line completion, since beta version of 2.04, to match partly typed program names, filenames and variable names. The Bash command-line completion system is very flexible and customizable, and is often packaged with functions that complete arguments and filenames for specific programs and tasks.</p>
<p><img src="https://proxy.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.wikihow.com%2Fimages%2F5%2F56%2FWrite-a-Shell-Script-Using-Bash-Shell-in-Ubuntu-Step-8-Version-4.jpg&amp;f=1" alt=""></p>
<h4 id="extra-resources">Extra resources</h4>
<ul>
<li><a href="https://www.gnu.org/software/bash/">Official project page</a></li>
<li><a href="https://en.wikipedia.org/wiki/Bash_%28Unix_shell%29">Wikipedia page</a></li>
<li><a href="https://github.com/Bash-it/bash-it">Bash-it - A bash framework</a></li>
<li><a href="https://github.com/awesome-lists/awesome-bash">Awesome-bash</a></li>
</ul>
<h3 id="zsh">Zsh</h3>
<p>Zsh is a shell designed for interactive use, although it is also a powerful scripting language. Many of the useful features of <em>bash</em>, <em>ksh</em>, and <em>tcsh</em> were incorporated into zsh; many original features were added. </p>
<p>Features include:</p>
<ul>
<li>Programmable command-line completion that can help the user type both options and arguments for most used commands, with out-of-the-box support for several hundred commands</li>
<li>Sharing of command history among all running shells</li>
<li>Extended file globbing allows file specification without needing to run an external program such as find</li>
<li>Improved variable/array handling</li>
<li>Editing of multi-line commands in a single buffer</li>
<li>Spelling correction</li>
<li>Themeable prompts, including the ability to put prompt information on the right side of the screen and have it auto-hide when typing a long command</li>
<li>And many more...</li>
</ul>
<p><img src="https://upload.wikimedia.org/wikipedia/commons/e/e3/Zsh-demo.png" alt=""></p>
<h4 id="extra-resources">Extra resources</h4>
<ul>
<li><a href="https://www.zsh.org/">Official project page</a></li>
<li><a href="https://en.wikipedia.org/wiki/Z_shell">WIkipedia page</a></li>
<li><a href="https://github.com/robbyrussell/oh-my-zsh">Oh-my-Zsh - A Zsh framework</a></li>
<li><a href="https://github.com/bhilburn/powerlevel9k">Powerlevel 9K - A Zsh theme</a></li>
<li><a href="https://github.com/unixorn/awesome-zsh-plugins">Awesome-zsh-plugins - A collection of ZSH frameworks, plugins, tutorials &amp; themes</a></li>
</ul>
<h3 id="fish">Fish</h3>
<p>The <strong>f</strong>riendly <strong>i</strong>nteractive <strong>sh</strong>ell is a Unix shell that attempts to be more interactive and user-friendly than those with a longer history (<em>i.e.</em> most other Unix shells) or those formulated as function-compatible replacements for the aforementioned (<em>e.g.</em> zsh, the Falstad shell). The design goal of fish is to give the user a rich set of powerful features in a way that is easy to discover, remember, and use. Fish is considered an &quot;exotic shell&quot;, in that its syntax derives from neither the Bourne shell nor the C shell . Also unlike previous shells, which disable certain features by default to save system resources, fish enables all features by default.</p>
<p>Fish has &quot;search as you type&quot; automatic suggestions based on history and current directory. The syntax resembles a POSIX compatible shell (such as bash), but deviates in important ways where the creators believe the POSIX shell was badly designed.</p>
<p><img src="https://proxy.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.maketecheasier.com%2Fassets%2Fuploads%2F2017%2F03%2FLinux-shells-06-fish-shell.png&amp;f=1" alt=""></p>
<h4 id="extra-resources">Extra resources</h4>
<ul>
<li><a href="https://fishshell.com/">Official project page</a></li>
<li><a href="https://en.wikipedia.org/wiki/Friendly_interactive_shell">Wikipedia page</a></li>
<li><a href="https://github.com/oh-my-fish/oh-my-fish">Oh-my-fish - A Fish framework</a></li>
<li><a href="https://github.com/jorgebucaran/awesome-fish">Awesome-fish - A curated list of packages, prompts, and resources</a></li>
</ul>
<h3 id="tcsh">TCSH</h3>
<p>Tcsh is a Unix shell based on and compatible with the C shell (csh). It is essentially the C shell with programmable command-line completion, command-line editing, and a few other features. Unlike the other common shells, functions cannot be defined in a tcsh script and the user must use aliases instead (as in csh). It is the native root shell for BSD-based systems such as FreeBSD.</p>
<p>Tcsh added filename and command completion and command line editing concepts borrowed from the Tenex system. Though it started as a side branch from the original source tree Joy had created, tcsh is now the main branch for ongoing development. tcsh is very stable but new releases continue to appear roughly once a year, consisting mostly of minor bug fixes. On many systems, such as Mac OS X and Red Hat Linux, csh is actually tcsh. Often one of the two files is either a hard link or a symbolic link to the other, so that either name refers to the same improved version of the C shell. </p>
<p><img src="https://upload.wikimedia.org/wikipedia/commons/7/7f/TC_Shell.png" alt=""></p>
<h4 id="extra-resources">Extra resources</h4>
<ul>
<li><a href="http://www.tcsh.org/">Official project page</a></li>
<li><a href="https://en.wikipedia.org/wiki/Tcsh">Wikipedia page</a></li>
</ul>
<h3 id="ksh">Ksh</h3>
<p><strong>K</strong>orn <strong>Sh</strong>ell is a Unix shell which was developed by David Korn at Bell Labs in the early 1980s and announced at USENIX on July 14, 1983. The initial development was based on Bourne shell source code. Other early contributors were Bell Labs developers Mike Veach and Pat Sullivan, who wrote the Emacs and vi-style line editing modes&#39; code, respectively. KornShell is backward-compatible with the Bourne shell and includes many features of the C shell, inspired by the requests of Bell Labs users. </p>
<p>The new version of ksh has the functionality of other scripting languages such as awk, icon, perl, rexx, and tcl. For this and many other reasons, ksh is a much better scripting language than any of the other popular shells. The code size for ksh is larger than the Bourne shell or C shell programs. The revised version is even larger. In spite of its increased size, ksh provides better performance. You can write programs to run faster with ksh than with either the Bourne shell or the C shell, sometimes an order of magnitude faster. ksh has evolved and matured with extensive user feedback. The KornShell language uses the same syntax for built-in commands as for non built-in commands. Therefore, system developers can add new commands &quot;transparently&quot; to the KornShell language; that is, with minimum effort and with no differences visible to users other than faster execution. On systems with dynamic linking, it is possible to add new built-in commands at run time.</p>
<p><img src="https://proxy.duckduckgo.com/iu/?u=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fit%2Fthumb%2F4%2F40%2FScreenshot_della_Korn_shell.png%2F1200px-Screenshot_della_Korn_shell.png&amp;f=1" alt=""></p>
<h4 id="extra-resources">Extra resources</h4>
<ul>
<li><a href="http://www.kornshell.org/">Official project page</a></li>
<li><a href="https://en.wikipedia.org/wiki/KornShell">Wikipedia page</a></li>
<li><a href="https://github.com/Lajule/auto">Auto - A collection of Korn Shell functions</a></li>
</ul>
<h3 id="conclusion">Conclusion</h3>
<p>Well, now you can choose your shell and start customizing it right now! There are many more shells out there that you can explore, so don&#39;t be bothered to search. See you next time.</p>
<p>By: <a href="https://github.com/newmankr">Newmankr</a></p>

</article>

<article class="post">
<h2 class="posttext">How To Compile Kernel Linux</h2>
<p class="posttext">
I make this tutorial to show in a simple way how to compile the linux kernel. <br>
<br>
https://telegra.ph/Como-Compilar-o-Kernel-Linux-12-03<br>
</p>
<p class="posttext">
By: <a href="https://github.com/UserUnavailable">Raqui333</a>
</p>
</article>
</br>

<article class="post">
<h2 class="posttext">Auto Login with TTY (NoSystemD)</h2>
<p class="posttext">
The tutorial is based on file /etc/inittab to check if there's this file in your distro;<br>
<code>$ test -e /etc/inittab && echo "/etc/inittab" || echo "NULL"</code>
<br><br>
Now that you already know this file, run this command bellow and change &#60;user&#62; to your user name.<br>
<code># sed -E '/tty1/s/(agetty)/\1 --autologin &#60;user&#62;/' -i /etc/inittab</code>
<br><br>
Now when you boot your linux it'll boot automatically; OBS: This login is only configured to TTY1.<br>
</p>
<p class="posttext">
By: <a href="https://github.com/UserUnavailable">Raqui333</a>
</p>
</article>
</br>

<article class="post">
<h2 class="posttext">PrintShotter</h2>
<p class="posttext">
PrintShotter is a program made by <a href="https://github.com/UserUnavailable" target="_black">UserUnavailable</a> to print desktop to clipboard. It can be find <a href="https://github.com/UserUnavailable/PrintShotter">here</a>. It's easy to install just put the binary in some directory of $PATH, or, if you use a Gentoo Based distro <a href="https://github.com/yaszu/yaszulay/tree/master/media-gfx/printshotter">Yaszulay</a>.
</p>
<p class="posttext">
By: <a href="https://github.com/UserUnavailable">Raqui333</a>
</p>
</article>
</br>

<article class="post">
<h2 class="posttext">Introduction To The Group</h2>
<p class="posttext">
Welcome To The Matrix is a group on <a href="https://my.telegram.org" target="_black">Telegram</a> to talk about tech stuffs and mainly, about <a href="https://www.linuxfoundation.org/projects/linux/" target="_black">Linux</a>. A group to socialize with users from all kind of system.
</p>
<img src="https://i.imgur.com/xeXXXAM.jpg" height="200" width="200" class="postimg" onclick="window.open(this.src)">
<p class="posttext">
By: <a href="https://github.com/UserUnavailable">Raqui333</a>
</p>
</article>
</br>
